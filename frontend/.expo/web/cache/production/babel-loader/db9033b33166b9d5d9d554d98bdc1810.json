{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import{initialState}from\"../initialState\";import*as t from\"../actionTypes\";export var authenticateReducer=function authenticateReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case t.LOGIN_REQUEST:console.log(\"reducer login request started\");console.log(action);return _objectSpread(_objectSpread(_objectSpread({},state),action.payload),{},{isLoggedIn:true,userId:action.payload.userId,username:action.payload.username,haveSetProfile:action.payload.haveSetProfile});case t.LOGOUT:console.log(\"reducer logout request started\");return _objectSpread(_objectSpread(_objectSpread({},state),action.payload),{},{isLoggedIn:false,userId:'',username:''});default:return state;}};","map":{"version":3,"sources":["/Users/yhlau/Arthur/project/wysfyp/frontend副本/plugin/redux/reducer/authenticateReducer.js"],"names":["initialState","t","authenticateReducer","state","action","type","LOGIN_REQUEST","console","log","payload","isLoggedIn","userId","username","haveSetProfile","LOGOUT"],"mappings":"+1BAAA,OAASA,YAAT,uBACA,MAAO,GAAKC,CAAAA,CAAZ,sBAEA,MAAO,IAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,EAAkC,IAAjCC,CAAAA,KAAiC,2DAAzBH,YAAyB,IAAXI,CAAAA,MAAW,2CAEnE,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKJ,CAAAA,CAAC,CAACK,aAAP,CACEC,OAAO,CAACC,GAAR,CAAY,+BAAZ,EACAD,OAAO,CAACC,GAAR,CAAYJ,MAAZ,EACA,oDACKD,KADL,EAEKC,MAAM,CAACK,OAFZ,MAGEC,UAAU,CAAE,IAHd,CAIEC,MAAM,CAAEP,MAAM,CAACK,OAAP,CAAeE,MAJzB,CAKEC,QAAQ,CAAER,MAAM,CAACK,OAAP,CAAeG,QAL3B,CAMEC,cAAc,CAAET,MAAM,CAACK,OAAP,CAAeI,cANjC,GAQA,IAAKZ,CAAAA,CAAC,CAACa,MAAP,CACEP,OAAO,CAACC,GAAR,CAAY,gCAAZ,EACF,oDACKL,KADL,EAEKC,MAAM,CAACK,OAFZ,MAGEC,UAAU,CAAE,KAHd,CAIEC,MAAM,CAAE,EAJV,CAKEC,QAAQ,CAAE,EALZ,GAOF,QACE,MAAOT,CAAAA,KAAP,CAtBJ,CAwBD,CA1BM","sourcesContent":["import { initialState } from '../initialState';\nimport * as t from '../actionTypes';\n// import {actionTypes} from './action'\nexport const authenticateReducer = (state = initialState, action) => {\n  \n  switch (action.type) {\n    case t.LOGIN_REQUEST:\n      console.log(\"reducer login request started\");\n      console.log(action);\n      return {\n        ...state,\n        ...action.payload, // this is what we expect to get back from API call and login page input\n        isLoggedIn: true, // we set this as true on login\n        userId: action.payload.userId,\n        username: action.payload.username,\n        haveSetProfile: action.payload.haveSetProfile\n      };\n      case t.LOGOUT:\n        console.log(\"reducer logout request started\");\n      return {\n        ...state,\n        ...action.payload, // this is what we expect to get back from API call and login page input\n        isLoggedIn: false, // we set this as true on login\n        userId: '',\n        username: ''\n      };\n    default:\n      return state;\n  }\n};\n\n// import { initialState } from './initialState';\n// import * as t from './actionTypes';\n\n// export const loginReducer = (state = initialState, action) => {\n//   switch (action.type) {\n//     case t.SET_LOGIN_STATE:\n//       return {\n//         ...state,\n//         ...action.payload, // this is what we expect to get back from API call and login page input\n//         isLoggedIn: true, // we set this as true on login\n//       };\n//     default:\n//       return state;\n//   }\n// };"]},"metadata":{},"sourceType":"module"}