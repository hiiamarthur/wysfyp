{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import useCompatNavigation from\"./useCompatNavigation\";export default function withNavigation(Comp){var WrappedComponent=function WrappedComponent(_ref){var onRef=_ref.onRef,rest=_objectWithoutProperties(_ref,[\"onRef\"]);var navigation=useCompatNavigation();return React.createElement(Comp,_extends({ref:onRef,navigation:navigation},rest));};WrappedComponent.displayName=\"withNavigation(\".concat(Comp.displayName||Comp.name,\")\");return WrappedComponent;}","map":{"version":3,"sources":["withNavigation.tsx"],"names":["WrappedComponent","rest","navigation","useCompatNavigation","Comp"],"mappings":"4WAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,CAEA,MAAA,CAAA,mBAAA,6BAOA,cAAe,SAAA,CAAA,cAAA,CAAA,IAAA,CAIJ,CACT,GAAMA,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,MAOC,IAPA,CAAA,KAOA,MAPA,KAOA,CALrBC,IAKqB,0CACxB,GAAMC,CAAAA,UAAU,CAAGC,mBADK,EACxB,CAGA,MAAO,CAAA,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CAAM,GAAG,CAAT,KAAA,CAAkB,UAAU,CAAED,UAA9B,CAAA,CAAP,IAAO,CAAA,CAAP,CAXF,CAAA,CAcAF,gBAAgB,CAAhBA,WAAAA,CAAAA,kBAAAA,MAAAA,CACEI,IAAI,CAAJA,WAAAA,EAAoBA,IAAI,CAD1BJ,IAAAA,CAAAA,GAAAA,CAAAA,CAIA,MAAA,CAAA,gBAAA,CACD","sourcesContent":["import * as React from 'react';\nimport type { NavigationProp, ParamListBase } from '@react-navigation/native';\nimport useCompatNavigation from './useCompatNavigation';\nimport type { CompatNavigationProp } from './types';\n\ntype InjectedProps<T extends NavigationProp<ParamListBase>> = {\n  navigation: CompatNavigationProp<T>;\n};\n\nexport default function withNavigation<\n  T extends NavigationProp<ParamListBase>,\n  P extends InjectedProps<T>,\n  C extends React.ComponentType<P>\n>(Comp: C) {\n  const WrappedComponent = ({\n    onRef,\n    ...rest\n  }: Exclude<P, InjectedProps<T>> & {\n    onRef?: C extends React.ComponentClass<any>\n      ? React.Ref<InstanceType<C>>\n      : never;\n  }): React.ReactElement => {\n    const navigation = useCompatNavigation<T>();\n\n    // @ts-expect-error: type checking HOC is hard\n    return <Comp ref={onRef} navigation={navigation} {...rest} />;\n  };\n\n  WrappedComponent.displayName = `withNavigation(${\n    Comp.displayName || Comp.name\n  })`;\n\n  return WrappedComponent;\n}\n"]},"metadata":{},"sourceType":"module"}