{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { initialState } from \"./initialState\";\nimport * as t from \"./actionTypes\";\nexport var authenticateReducer = function authenticateReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case t.LOGIN_REQUEST:\n      console.log(\"reducer login request started\");\n      return _objectSpread(_objectSpread(_objectSpread({}, state), action.payload), {}, {\n        isLoggedIn: true\n      });\n\n    case t.LOGOUT:\n      console.log(\"reducer logout request started\");\n      return _objectSpread(_objectSpread(_objectSpread({}, state), action.payload), {}, {\n        isLoggedIn: false\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/yhlau/Arthur/project/wysfyp/frontend/plugin/redux/reducer.js"],"names":["initialState","t","authenticateReducer","state","action","type","LOGIN_REQUEST","console","log","payload","isLoggedIn","LOGOUT"],"mappings":";;;;;;AAAA,SAASA,YAAT;AACA,OAAO,KAAKC,CAAZ;AAEA,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AAEnE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKJ,CAAC,CAACK,aAAP;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACA,2DACKL,KADL,GAEKC,MAAM,CAACK,OAFZ;AAGEC,QAAAA,UAAU,EAAE;AAHd;;AAKA,SAAKT,CAAC,CAACU,MAAP;AACEJ,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACF,2DACKL,KADL,GAEKC,MAAM,CAACK,OAFZ;AAGEC,QAAAA,UAAU,EAAE;AAHd;;AAKF;AACE,aAAOP,KAAP;AAhBJ;AAkBD,CApBM","sourcesContent":["import { initialState } from './initialState';\nimport * as t from './actionTypes';\n// import {actionTypes} from './action'\nexport const authenticateReducer = (state = initialState, action) => {\n  \n  switch (action.type) {\n    case t.LOGIN_REQUEST:\n      console.log(\"reducer login request started\");\n      return {\n        ...state,\n        ...action.payload, // this is what we expect to get back from API call and login page input\n        isLoggedIn: true, // we set this as true on login\n      };\n      case t.LOGOUT:\n        console.log(\"reducer logout request started\");\n      return {\n        ...state,\n        ...action.payload, // this is what we expect to get back from API call and login page input\n        isLoggedIn: false, // we set this as true on login\n      };\n    default:\n      return state;\n  }\n};\n\n// import { initialState } from './initialState';\n// import * as t from './actionTypes';\n\n// export const loginReducer = (state = initialState, action) => {\n//   switch (action.type) {\n//     case t.SET_LOGIN_STATE:\n//       return {\n//         ...state,\n//         ...action.payload, // this is what we expect to get back from API call and login page input\n//         isLoggedIn: true, // we set this as true on login\n//       };\n//     default:\n//       return state;\n//   }\n// };"]},"metadata":{},"sourceType":"module"}