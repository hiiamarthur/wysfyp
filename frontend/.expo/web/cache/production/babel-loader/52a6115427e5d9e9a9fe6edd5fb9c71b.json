{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import*as t from\"../plugin/redux/actionTypes\";import{service}from\"../plugin/service\";import Alert from\"react-native-web/dist/exports/Alert\";import{store}from\"../plugin/redux/store\";import axios from\"axios\";import{userConstants}from\"../plugin/_constants/user.constants\";import{auth}from\"../plugin/firebase\";import{network}from\"../plugin/global\";import Constants from\"expo-constants\";var ipx,ipy;export var authenticateActions={login:login,logout:logout,register:register,getAccountInfo:getAccountInfo,delete:_delete};function setLoginState(loginData){return{type:t.LOGIN_REQUEST,payload:loginData};};function login(username,password,navigation,name){console.log(\"login action started\");var loginInput={\"username\":username,\"password\":password};return function _callee(dispatch){var service_state,service_result;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:service_state=false;service_result={status:\"failed\"};_context.next=4;return _regeneratorRuntime.awrap(service.post('/auth/login',loginInput).then(function(res){console.log('xd');console.log(res.data);if(res.data.data.status){dispatch(setLoginState({username:res.data.data.username,userId:res.data.data.userId,haveSetProfile:res.data.data.haveSetProfile}));navigation.replace(name);service_state=true;service_result={status:\"success\"};}else{Alert.alert('Login Failed','Username or Password is incorrect');}}).catch(function(err){Alert.alert('Login Failed','Some error occured, please retry');console.log(err);}));case 4:_context.next=6;return _regeneratorRuntime.awrap(new Promise(function(resolve,reject){console.log(service_result,service_state);var Object=service_result;if(service_state==true){resolve(Object);}else{reject(Object);}}));case 6:return _context.abrupt(\"return\",_context.sent);case 7:case\"end\":return _context.stop();}}},null,null,null,Promise);};function request(user){return{type:userConstants.LOGIN_REQUEST,user:user};}function success(user){return{type:userConstants.LOGIN_SUCCESS,user:user};}function failure(error){return{type:userConstants.LOGIN_FAILURE,error:error};}}function logout(){console.log(\"logout action started!\");return function(dispatch){dispatch(setLogoutState());};function setLogoutState(){return{type:t.LOGOUT,payload:null};};}function register(username,password,email){console.log(\"register action started!\");var registerInfo={username:username,password:password,email:email};return function(dispatch){dispatch(request(username));return service.post('/auth/signUp',registerInfo).then(function(res){console.log(res);if(res.data){Alert.alert(\"registration successful!\",\"You can press back to Login now!\");}else{Alert.alert('Register Failed','Username or Password is incorrect');}}).catch(function(err){Alert.alert('Register Failed','Some error occured, please check Username or Password');console.log(err);});};function request(username){return{type:userConstants.REGISTER_REQUEST,username:username};}function success(user){return{type:userConstants.REGISTER_SUCCESS,user:user};}function failure(error){return{type:userConstants.REGISTER_FAILURE,error:error};}}function getAccountInfo(inquireInfo,type){console.log(\"get AccountInfo action started!\");console.log(inquireInfo,type);console.log(\"/auth/queryAccountInform/inquireInfo=\"+inquireInfo);return service.get(\"/auth/queryAccountInform/inquireInfo=\"+inquireInfo+\"/type=\"+type).then(function(res){if(res.data.data._size){Alert.alert('Register Error','Username duplicated');return{status:false,message:\"\"};}else{return{status:true,message:\"\"};}}).catch(function(err){console.log(err);});function request(username){return{type:userConstants.REGISTER_REQUEST,username:username};}function success(user){return{type:userConstants.REGISTER_SUCCESS,user:user};}function failure(error){return{type:userConstants.REGISTER_FAILURE,error:error};}}function getAll(){return function(dispatch){dispatch(request());userService.getAll().then(function(users){return dispatch(success(users));},function(error){return dispatch(failure(error.toString()));});};function request(){return{type:userConstants.GETALL_REQUEST};}function success(users){return{type:userConstants.GETALL_SUCCESS,users:users};}function failure(error){return{type:userConstants.GETALL_FAILURE,error:error};}}function _delete(id){return function(dispatch){dispatch(request(id));userService.delete(id).then(function(user){return dispatch(success(id));},function(error){return dispatch(failure(id,error.toString()));});};function request(id){return{type:userConstants.DELETE_REQUEST,id:id};}function success(id){return{type:userConstants.DELETE_SUCCESS,id:id};}function failure(id,error){return{type:userConstants.DELETE_FAILURE,id:id,error:error};}}","map":{"version":3,"sources":["/Users/yhlau/Arthur/project/wysfyp/frontend副本/action/authenticateActions.js"],"names":["t","service","store","axios","userConstants","auth","network","Constants","ipx","ipy","authenticateActions","login","logout","register","getAccountInfo","delete","_delete","setLoginState","loginData","type","LOGIN_REQUEST","payload","username","password","navigation","name","console","log","loginInput","dispatch","service_state","service_result","status","post","then","res","data","userId","haveSetProfile","replace","Alert","alert","catch","err","Promise","resolve","reject","Object","request","user","success","LOGIN_SUCCESS","failure","error","LOGIN_FAILURE","setLogoutState","LOGOUT","email","registerInfo","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","inquireInfo","get","_size","message","getAll","userService","users","toString","GETALL_REQUEST","GETALL_SUCCESS","GETALL_FAILURE","id","DELETE_REQUEST","DELETE_SUCCESS","DELETE_FAILURE"],"mappings":"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","sourcesContent":["import * as t from '../plugin/redux/actionTypes';\n\nimport{service} from '../plugin/service';\n\nimport { Alert } from 'react-native'; // to show alerts in app\nimport {store} from '../plugin/redux/store';\nimport axios from \"axios\";\nimport {userConstants} from \"../plugin/_constants/user.constants\";\nimport {auth}from \"../plugin/firebase\";\nimport {network} from '../plugin/global';\nimport Constants from \"expo-constants\";\n// const { manifest } = Constants;\n\n// const url = (typeof manifest.packagerOpts === `object`) && manifest.packagerOpts.dev\n//   ? manifest.debuggerHost.split(`:`).shift().concat(`:3000`)\n//   : `api.example.com`;\n\n// Get Local IP\nvar ipx,ipy;\n\n// this is what our action should look like which dispatches the \"payload\" to reducer\n\nexport const authenticateActions = {\n  login,\n  logout,\n  register,\n  getAccountInfo,\n  delete: _delete\n};\n  \nfunction setLoginState(loginData){\n  return {\n    type: t.LOGIN_REQUEST,\n    payload: loginData,\n  };\n};\n  function login(username, password, navigation,name) {\n    console.log(\"login action started\");\n    const loginInput = {\"username\":username,\"password\":password};\n    return async dispatch => {\n      let service_state = false;\n      let service_result = {status: \"failed\"};\n        // dispatch(request({ username }));\n\n        // userService.login(username, password)\n        //     .then(\n        //         user => { \n        //             dispatch(success(user));\n        //             history.push(from);\n        //         },\n        //         error => {\n        //             dispatch(failure(error.toString()));\n        //             dispatch(alertActions.error(error.toString()));\n        //         }\n        //     );\n        await service.post('/auth/login',loginInput)\n            .then((res) => {\n              console.log('xd');\n              console.log(res.data);\n              if(res.data.data.status){\n                dispatch(setLoginState({username:res.data.data.username,userId:res.data.data.userId,haveSetProfile:res.data.data.haveSetProfile}));\n                // dispatch(success(user));\n                // if(!res.data.data.haveSetProfile){\n                //   navigation.navigate('profileForm');\n                // }else{\n                  navigation.replace(name);\n                // }\n                service_state = true;\n                service_result = {status: \"success\"};\n              }\n              else {\n                // dispatch(failure(error.toString()));\n                Alert.alert('Login Failed', 'Username or Password is incorrect');\n          }\n        })\n        .catch((err) => {\n          Alert.alert('Login Failed', 'Some error occured, please retry');\n          console.log(err);\n        });\n      \n      return await new Promise((resolve, reject) => {\n        console.log(service_result,service_state);\n        const Object = service_result;\n      if(service_state == true) {\n          \n          resolve(Object); \n      } else {\n\n          reject(Object);\n      }\n    })\n    };\n    \n    function request(user) { return { type: userConstants.LOGIN_REQUEST, user } }\n    function success(user) { return { type: userConstants.LOGIN_SUCCESS, user } }\n    function failure(error) { return { type: userConstants.LOGIN_FAILURE, error } }\n}\nfunction logout() {\n  console.log(\"logout action started!\")\n  return dispatch => {dispatch(setLogoutState())};\n  \n\n  function setLogoutState(){return {type:t.LOGOUT,payload: null}};\n}\n\nfunction register(username,password,email) {\n  console.log(\"register action started!\")\n  let registerInfo = {\n    username:username,\n    password:password,\n    email:email\n  }\n  return dispatch => {\n      dispatch(request(username));\n\n      return service.post('/auth/signUp',registerInfo)\n            .then((res) => {\n              console.log(res);\n              if(res.data){\n                Alert.alert(\"registration successful!\",\"You can press back to Login now!\");\n                // dispatch(success);\n                // dispatch(success(user));\n              }\n              else {\n                // dispatch(failure(error.toString()));\n                Alert.alert('Register Failed', 'Username or Password is incorrect');\n          }\n        })\n        .catch((err) => {\n          Alert.alert('Register Failed', 'Some error occured, please check Username or Password');\n          console.log(err);\n        });\n  };\n\n  function request(username) { return { type: userConstants.REGISTER_REQUEST, username } }\n  function success(user) { return { type: userConstants.REGISTER_SUCCESS, user } }\n  function failure(error) { return { type: userConstants.REGISTER_FAILURE, error } }\n}\n\nfunction getAccountInfo(inquireInfo,type) {\n  console.log(\"get AccountInfo action started!\");\n  console.log(inquireInfo,type);\n  console.log(`/auth/queryAccountInform/inquireInfo=${inquireInfo}`);\n  // let registerInfo = {\n  //   username:username,\n  //   password:password,\n  //   email:email\n  // }\n  // return dispatch => {\n  //     dispatch(request(username));\n      return service.get(`/auth/queryAccountInform/inquireInfo=${inquireInfo}/type=${type}`)\n            .then((res) => {\n              // console.log(res.data.data._size);\n              if(res.data.data._size){\n                // console.log(\"registration successful!\");\n                // dispatch(success);\n                // dispatch(success(user));\n                Alert.alert('Register Error', 'Username duplicated');\n                return {status:false,message:\"\"}\n              }\n              else {\n                return {status:true,message:\"\"}\n                // dispatch(failure(error.toString()));\n                // Alert.alert('Register Failed', 'Username or Password is incorrect');\n          }\n        })\n        .catch((err) => {\n          // Alert.alert('Register Failed', 'Some error occured, please retry');\n          console.log(err);\n        });\n  // };\n\n  function request(username) { return { type: userConstants.REGISTER_REQUEST, username } }\n  function success(user) { return { type: userConstants.REGISTER_SUCCESS, user } }\n  function failure(error) { return { type: userConstants.REGISTER_FAILURE, error } }\n}\n\nfunction getAll() {\n  return dispatch => {\n      dispatch(request());\n\n      userService.getAll()\n          .then(\n              users => dispatch(success(users)),\n              error => dispatch(failure(error.toString()))\n          );\n  };\n\n  function request() { return { type: userConstants.GETALL_REQUEST } }\n  function success(users) { return { type: userConstants.GETALL_SUCCESS, users } }\n  function failure(error) { return { type: userConstants.GETALL_FAILURE, error } }\n}\n\n// prefixed function name with underscore because delete is a reserved word in javascript\nfunction _delete(id) {\n  return dispatch => {\n      dispatch(request(id));\n\n      userService.delete(id)\n          .then(\n              user => dispatch(success(id)),\n              error => dispatch(failure(id, error.toString()))\n          );\n  };\n\n  function request(id) { return { type: userConstants.DELETE_REQUEST, id } }\n  function success(id) { return { type: userConstants.DELETE_SUCCESS, id } }\n  function failure(id, error) { return { type: userConstants.DELETE_FAILURE, id, error } }\n}\n\n\n// export const login = (loginInput,dispatch) => {\n//   const { username, password } = loginInput;\n//   //this.getIPAddress();\n//   // console.log(ipx);\n//   // console.log(ipy);\n  \n//   // network.getIpAddressAsync().then((v)=>{console.log(v)})\n//   // network.getMacAddressAsync().then((v)=>{console.log(v)})\n//   // console.log(Constants.experienceUrl);\n//   // console.log(url);\n//   // console.log('xd1');\n//   // console.log(loginInput);\n//   return service.post('/auth/login',loginInput)\n//     .then((res) => {\n//       console.log(res.data)\n//       dispatch(setLoginState());\n//   }).catch((error) => {\n//       console.log(error)\n//   });\n\n//   // return (dispatch) => {  // don't forget to use dispatch here!\n//   //   service.post('/auth/login', loginInput)\n//   //   .then(function (response) {\n//   //     console.log(response);\n\n//   //     // and create action obj here\n//   //     dispatch(setLoginState());\n//   // })\n//   // .catch(function (error) {\n//   //     throw error;\n//   //     console.log(error);\n//   // });\n// //     // return await service\n// //     // .post('/auth/login',{\n// //     //   username:loginInput.username,\n// //     //   password:loginInput.password\n// //     // }).then(res => {\n// //     //   // if the credential are correct\n// //     //   if (res.data.success) {\n// //     //     // assign the variables to state by the function 'login' in mutation\n// //     //     // context.commit(\"login\", {\n// //     //     //   token: res.data.data.token,\n// //     //     //   user: res.data.data.userInfo[0],\n// //     //     //   exp: Math.floor(Date.now() / 1000) + 60 * 360\n// //     //     // });\n// //     //     // // return the user information to have a signal\n// //     //     // return res.data.data.user;\n// //     //   } else {\n// //     //     // // activate the function 'logout' in mutation\n// //     //     // context.commit(\"logout\");\n// //     //     // // throw error\n// //     //     // throw \"Wrong username or password\";\n// //     //   }\n// //     // }).catch(err=>{\n// //     //   throw err;\n// //     // })\n// //     // \n    \n// //   };\n// };\n\n// // export const login = (loginInput) => {\n// //     console.log('xd');\n// //   console.log(loginInput);\n// //   //const { username, password } = loginInput;\n// //   return (dispatch) => {  // don't forget to use dispatch here!\n// //     return axios.post(\"http://localhost:3000/auth/login\",loginInput)\n// //     .then(res => {\n// //       if (res.status == 201){\n// //        navigation.navigate('Home')\n// //        storeData(res.data)\n// //       }else {\n// //         Alert.alert('Wrong email or password')\n// //       }\n// //     })\n// //     .catch(function(error) {\n// //       console.log(error.message);\n// //         throw error;\n// //       })\n// //   };\n// // };"]},"metadata":{},"sourceType":"module"}