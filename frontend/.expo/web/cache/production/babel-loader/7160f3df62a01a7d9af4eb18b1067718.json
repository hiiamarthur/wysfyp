{"ast":null,"code":"import*as t from\"../plugin/redux/actionTypes\";import{store}from\"../plugin/redux/store\";import{service}from\"../plugin/service\";import Alert from\"react-native-web/dist/exports/Alert\";export var requestActions={query:query,insert:insert,delete:_delete,update:update};function setGetRequestState(requestData){return{type:t.GETREQUEST_REQUEST,payload:requestData};};function query(fieldname,fieldtype,orderFieldName,IsAll){console.log(\"action query request started\");var userID=store.getState().authenticateReducer.userId;var route;console.log(userID);if(!IsAll)route=\"/matching/getMatchableRequest/fieldName=\"+fieldname+\"/fieldValue=\"+fieldtype+\"/orderFieldName=\"+orderFieldName+\"/userID=\"+userID;else route=\"/matching/getMatchableRequest/fieldName=\"+fieldname+\"/fieldValue=\"+fieldtype+\"/orderFieldName=\"+orderFieldName+\"/userID=\";console.log(route);return function(dispatch){return service.get(route).then(function(res){console.log(res.data.data);console.log(\"yoyoyoyo\");dispatch(setGetRequestState({data:res.data.data}));return res.data.data;}).catch(function(err){console.log(err);});};}function insert(requestInfo){console.log(\"action insert request started\");requestInfo.userID=store.getState().authenticateReducer.userId;return service.post('/matching/insertRequest',requestInfo).then(function(res){console.log(res);}).catch(function(err){console.log(err);});}function _delete(){}function update(){}","map":{"version":3,"sources":["/Users/yhlau/Arthur/project/wysfyp/frontend副本/action/requestActions.js"],"names":["t","store","service","requestActions","query","insert","delete","_delete","update","setGetRequestState","requestData","type","GETREQUEST_REQUEST","payload","fieldname","fieldtype","orderFieldName","IsAll","console","log","userID","getState","authenticateReducer","userId","route","dispatch","get","then","res","data","catch","err","requestInfo","post"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,CAAZ,mCAEA,OAAQC,KAAR,6BACA,OAAOC,OAAP,yB,uDAIA,MAAO,IAAMC,CAAAA,cAAc,CAAG,CAC1BC,KAAK,CAALA,KAD0B,CAE1BC,MAAM,CAANA,MAF0B,CAG1BC,MAAM,CAAEC,OAHkB,CAI1BC,MAAM,CAANA,MAJ0B,CAAvB,CAMP,QAASC,CAAAA,kBAAT,CAA4BC,WAA5B,CAAwC,CACpC,MAAO,CACLC,IAAI,CAAEX,CAAC,CAACY,kBADH,CAELC,OAAO,CAAEH,WAFJ,CAAP,CAID,EACH,QAASN,CAAAA,KAAT,CAAeU,SAAf,CAAyBC,SAAzB,CAAmCC,cAAnC,CAAkDC,KAAlD,CAAwD,CACpDC,OAAO,CAACC,GAAR,CAAY,8BAAZ,EACA,GAAIC,CAAAA,MAAM,CAAGnB,KAAK,CAACoB,QAAN,GAAiBC,mBAAjB,CAAqCC,MAAlD,CACA,GAAIC,CAAAA,KAAJ,CACAN,OAAO,CAACC,GAAR,CAAYC,MAAZ,EAEA,GAAG,CAACH,KAAJ,CACIO,KAAK,4CAA8CV,SAA9C,gBAAsEC,SAAtE,oBAAkGC,cAAlG,YAA2HI,MAAhI,CADJ,IAGII,CAAAA,KAAK,4CAA8CV,SAA9C,gBAAsEC,SAAtE,oBAAkGC,cAAlG,WAAL,CACJE,OAAO,CAACC,GAAR,CAAYK,KAAZ,EACA,MAAO,UAAAC,QAAQ,CAAE,CACb,MAAOvB,CAAAA,OAAO,CAACwB,GAAR,CAAYF,KAAZ,EACFG,IADE,CACG,SAAAC,GAAG,CAAE,CACPV,OAAO,CAACC,GAAR,CAAYS,GAAG,CAACC,IAAJ,CAASA,IAArB,EACAX,OAAO,CAACC,GAAR,CAAY,UAAZ,EACAM,QAAQ,CAAChB,kBAAkB,CAAC,CAACoB,IAAI,CAACD,GAAG,CAACC,IAAJ,CAASA,IAAf,CAAD,CAAnB,CAAR,CACA,MAAOD,CAAAA,GAAG,CAACC,IAAJ,CAASA,IAAhB,CAEH,CAPE,EAOAC,KAPA,CAOM,SAAAC,GAAG,CAAE,CACVb,OAAO,CAACC,GAAR,CAAYY,GAAZ,EACH,CATE,CAAP,CAUH,CAXD,CAYH,CAED,QAAS1B,CAAAA,MAAT,CAAgB2B,WAAhB,CAA4B,CACxBd,OAAO,CAACC,GAAR,CAAY,+BAAZ,EACAa,WAAW,CAACZ,MAAZ,CAAqBnB,KAAK,CAACoB,QAAN,GAAiBC,mBAAjB,CAAqCC,MAA1D,CACA,MAAOrB,CAAAA,OAAO,CAAC+B,IAAR,CAAa,yBAAb,CAAuCD,WAAvC,EACFL,IADE,CACG,SAAAC,GAAG,CAAE,CACPV,OAAO,CAACC,GAAR,CAAYS,GAAZ,EACH,CAHE,EAGAE,KAHA,CAGM,SAAAC,GAAG,CAAE,CACVb,OAAO,CAACC,GAAR,CAAYY,GAAZ,EACH,CALE,CAAP,CAMH,CAED,QAASxB,CAAAA,OAAT,EAAkB,CAAE,CAEpB,QAASC,CAAAA,MAAT,EAAiB,CAAE","sourcesContent":["import * as t from '../plugin/redux/actionTypes';\n\nimport {store} from '../plugin/redux/store';\nimport{service} from '../plugin/service';\n\nimport { Alert } from 'react-native'; // to show alerts in app\n\nexport const requestActions = {\n    query,\n    insert,\n    delete: _delete,\n    update\n}\nfunction setGetRequestState(requestData){\n    return {\n      type: t.GETREQUEST_REQUEST,\n      payload: requestData,\n    };\n  };\nfunction query(fieldname,fieldtype,orderFieldName,IsAll){\n    console.log(\"action query request started\");\n    let userID = store.getState().authenticateReducer.userId;\n    let route;\n    console.log(userID);\n    \n    if(!IsAll)\n        route = `/matching/getMatchableRequest/fieldName=${fieldname}/fieldValue=${fieldtype}/orderFieldName=${orderFieldName}/userID=${userID}`;\n    else\n        route = `/matching/getMatchableRequest/fieldName=${fieldname}/fieldValue=${fieldtype}/orderFieldName=${orderFieldName}/userID=`;\n    console.log(route);\n    return dispatch=>{\n        return service.get(route)\n            .then(res=>{\n                console.log(res.data.data);\n                console.log(\"yoyoyoyo\")\n                dispatch(setGetRequestState({data:res.data.data}))\n                return res.data.data;\n                // dispatch()\n            }).catch(err=>{\n                console.log(err);\n            })\n    }\n}\n\nfunction insert(requestInfo){\n    console.log(\"action insert request started\");\n    requestInfo.userID = store.getState().authenticateReducer.userId;\n    return service.post('/matching/insertRequest',requestInfo)\n        .then(res=>{\n            console.log(res);\n        }).catch(err=>{\n            console.log(err);\n        })\n}\n\nfunction _delete(){}\n\nfunction update(){}"]},"metadata":{},"sourceType":"module"}