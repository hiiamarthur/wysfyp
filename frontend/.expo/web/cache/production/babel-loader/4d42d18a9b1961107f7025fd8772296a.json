{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import{locationState}from\"../initialState\";import*as t from\"../actionTypes\";export var locationReducer=function locationReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:locationState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case t.GETLOCATION_REQUEST:console.log(\"reducer get location started\");return _objectSpread(_objectSpread(_objectSpread({},state),action.payload),{},{data:action.payload.data});default:return state;}};","map":{"version":3,"sources":["/Users/yhlau/Arthur/project/wysfyp/frontend副本/plugin/redux/reducer/locationReducer.js"],"names":["locationState","t","locationReducer","state","action","type","GETLOCATION_REQUEST","console","log","payload","data"],"mappings":"+1BAAA,OAASA,aAAT,uBACA,MAAO,GAAKC,CAAAA,CAAZ,sBAEA,MAAO,IAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAmC,IAAlCC,CAAAA,KAAkC,2DAA1BH,aAA0B,IAAXI,CAAAA,MAAW,2CAEhE,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKJ,CAAAA,CAAC,CAACK,mBAAP,CACEC,OAAO,CAACC,GAAR,CAAY,8BAAZ,EACA,oDACKL,KADL,EAEKC,MAAM,CAACK,OAFZ,MAGEC,IAAI,CAAEN,MAAM,CAACK,OAAP,CAAeC,IAHvB,GAKF,QACE,MAAOP,CAAAA,KAAP,CATJ,CAWD,CAbM","sourcesContent":["import { locationState } from '../initialState';\nimport * as t from '../actionTypes';\n// import {actionTypes} from './action'\nexport const locationReducer = (state = locationState, action) => {\n  \n  switch (action.type) {\n    case t.GETLOCATION_REQUEST:\n      console.log(\"reducer get location started\");\n      return {\n        ...state,\n        ...action.payload, // this is what we expect to get back from API call and login page input\n        data: action.payload.data\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}