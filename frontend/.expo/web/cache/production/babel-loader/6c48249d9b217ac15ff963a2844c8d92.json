{"ast":null,"code":"import*as React from'react';import{useNavigation,useRoute,useNavigationState}from'@react-navigation/native';import createCompatNavigationProp from\"./createCompatNavigationProp\";export default function useCompatNavigation(){var navigation=useNavigation();var route=useRoute();var isFirstRouteInParent=useNavigationState(function(state){return state.routes[0].key===route.key;});var context=React.useRef({});return React.useMemo(function(){return createCompatNavigationProp(navigation,route,context.current,isFirstRouteInParent);},[isFirstRouteInParent,navigation,route]);}","map":{"version":3,"sources":["useCompatNavigation.tsx"],"names":["navigation","useNavigation","route","useRoute","isFirstRouteInParent","useNavigationState","state","context","React","createCompatNavigationProp"],"mappings":"AAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,CACA,OAAA,aAAA,CAAA,QAAA,CAAA,kBAAA,KAAA,0BAAA,CAOA,MAAA,CAAA,0BAAA,oCAGA,cAAe,SAAA,CAAA,mBAAA,EAEX,CACF,GAAMA,CAAAA,UAAU,CAAGC,aAAnB,EAAA,CACA,GAAMC,CAAAA,KAAK,CAAGC,QAAd,EAAA,CAEA,GAAMC,CAAAA,oBAAoB,CAAGC,kBAAkB,CAC5CC,SAAAA,KAAD,QAAWA,CAAAA,KAAK,CAALA,MAAAA,CAAAA,CAAAA,EAAAA,GAAAA,GAAwBJ,KAAK,CAD1C,GACE,EAD6C,CAA/C,CAIA,GAAMK,CAAAA,OAAO,CAAGC,KAAK,CAALA,MAAAA,CAAhB,EAAgBA,CAAhB,CAEA,MAAOA,CAAAA,KAAK,CAALA,OAAAA,CACL,iBACEC,CAAAA,0BAA0B,CAAA,UAAA,CAAA,KAAA,CAGxBF,OAAO,CAHiB,OAAA,CAFvBC,oBAEuB,CAD5B,EADKA,CAQL,CAAA,oBAAA,CAAA,UAAA,CARF,KAQE,CARKA,CAAP,CAUD","sourcesContent":["import * as React from 'react';\nimport {\n  useNavigation,\n  useRoute,\n  NavigationProp,\n  ParamListBase,\n  useNavigationState,\n} from '@react-navigation/native';\nimport createCompatNavigationProp from './createCompatNavigationProp';\nimport type { CompatNavigationProp } from './types';\n\nexport default function useCompatNavigation<\n  T extends NavigationProp<ParamListBase>\n>() {\n  const navigation = useNavigation();\n  const route = useRoute();\n\n  const isFirstRouteInParent = useNavigationState(\n    (state) => state.routes[0].key === route.key\n  );\n\n  const context = React.useRef<Record<string, any>>({});\n\n  return React.useMemo(\n    () =>\n      createCompatNavigationProp(\n        navigation,\n        route as any,\n        context.current,\n        isFirstRouteInParent\n      ) as CompatNavigationProp<T>,\n    [isFirstRouteInParent, navigation, route]\n  );\n}\n"]},"metadata":{},"sourceType":"module"}