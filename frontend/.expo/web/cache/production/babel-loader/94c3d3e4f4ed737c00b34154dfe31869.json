{"ast":null,"code":"import*as t from\"../plugin/redux/actionTypes\";import{store}from\"../plugin/redux/store\";import{service}from\"../plugin/service\";import Alert from\"react-native-web/dist/exports/Alert\";export var locationActions={queryLocation:queryLocation,insertComment:insertComment,queryComment:queryComment};function setqueryLocation(queryData){return{type:t.GETLOCATION_REQUEST,payload:queryData};}function queryLocation(){console.log(\"action queryLocation started!\");return function(dispatch){return service.get('/location/getAllLocation').then(function(res){if(res.data){dispatch(setqueryLocation(res.data.data));}}).catch(function(err){console.log(err);});};}function insertComment(){}function queryComment(){}","map":{"version":3,"sources":["/Users/yhlau/Arthur/project/wysfyp/frontend副本/action/locationActions.js"],"names":["t","store","service","locationActions","queryLocation","insertComment","queryComment","setqueryLocation","queryData","type","GETLOCATION_REQUEST","payload","console","log","dispatch","get","then","res","data","catch","err"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,CAAZ,mCAEA,OAAQC,KAAR,6BACA,OAAOC,OAAP,yB,uDAIA,MAAO,IAAMC,CAAAA,eAAe,CAAG,CAC3BC,aAAa,CAAbA,aAD2B,CAE3BC,aAAa,CAAbA,aAF2B,CAG3BC,YAAY,CAAZA,YAH2B,CAAxB,CAKP,QAASC,CAAAA,gBAAT,CAA0BC,SAA1B,CAAoC,CAChC,MAAO,CACHC,IAAI,CAAET,CAAC,CAACU,mBADL,CAEHC,OAAO,CAAEH,SAFN,CAAP,CAIH,CACD,QAASJ,CAAAA,aAAT,EAAwB,CACpBQ,OAAO,CAACC,GAAR,CAAY,+BAAZ,EACA,MAAO,UAAAC,QAAQ,CAAG,CACd,MAAOZ,CAAAA,OAAO,CAACa,GAAR,CAAY,0BAAZ,EAAwCC,IAAxC,CAA6C,SAACC,GAAD,CAAS,CACzD,GAAGA,GAAG,CAACC,IAAP,CAAY,CACRJ,QAAQ,CAACP,gBAAgB,CAACU,GAAG,CAACC,IAAJ,CAASA,IAAV,CAAjB,CAAR,CACH,CACJ,CAJM,EAIJC,KAJI,CAIE,SAAAC,GAAG,CAAE,CACVR,OAAO,CAACC,GAAR,CAAYO,GAAZ,EACH,CANM,CAAP,CAOH,CARD,CAUH,CAED,QAASf,CAAAA,aAAT,EAAwB,CAAE,CAE1B,QAASC,CAAAA,YAAT,EAAuB,CAAE","sourcesContent":["import * as t from '../plugin/redux/actionTypes';\n\nimport {store} from '../plugin/redux/store';\nimport{service} from '../plugin/service';\n\nimport { Alert } from 'react-native'; // to show alerts in app\n\nexport const locationActions = {\n    queryLocation,\n    insertComment,\n    queryComment,\n}\nfunction setqueryLocation(queryData){\n    return {\n        type: t.GETLOCATION_REQUEST,\n        payload: queryData\n    }\n}\nfunction queryLocation(){\n    console.log(\"action queryLocation started!\");\n    return dispatch =>{\n        return service.get('/location/getAllLocation').then((res) => {\n            if(res.data){\n                dispatch(setqueryLocation(res.data.data));\n            }\n        }).catch(err=>{\n            console.log(err);\n        });\n    }\n    \n}\n\nfunction insertComment(){}\n\nfunction queryComment(){}"]},"metadata":{},"sourceType":"module"}