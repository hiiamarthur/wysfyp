{"ast":null,"code":"import * as t from \"./actionTypes\";\nimport { service } from \"../service\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport axios from \"axios\";\n\nvar setLoginState = function setLoginState(loginData) {\n  return {\n    type: t.SET_LOGIN_STATE,\n    payload: loginData\n  };\n};\n\nexport function login(loginInput) {\n  var username = loginInput.username,\n      password = loginInput.password;\n  console.log('xd');\n  console.log(loginInput);\n  return function (dispatch) {\n    return axios.post('http://10.0.0.2:3000/auth/login', JSON.stringify(loginInput)).then(function (response) {\n      console.log(response);\n    }).catch(function (error) {\n      throw error;\n      console.log(error);\n    });\n  };\n}\n;","map":{"version":3,"sources":["/Users/yhlau/Arthur/project/wysfyp/frontend/plugin/redux/action.js"],"names":["t","service","axios","setLoginState","loginData","type","SET_LOGIN_STATE","payload","login","loginInput","username","password","console","log","dispatch","post","JSON","stringify","then","response","catch","error"],"mappings":"AAAA,OAAO,KAAKA,CAAZ;AAEA,SAAOC,OAAP;;AAIA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,SAAD,EAAe;AACjC,SAAO;AACLC,IAAAA,IAAI,EAAEL,CAAC,CAACM,eADH;AAELC,IAAAA,OAAO,EAAEH;AAFJ,GAAP;AAID,CALH;;AASA,OAAO,SAASI,KAAT,CAAeC,UAAf,EAA0B;AAAA,MACvBC,QADuB,GACAD,UADA,CACvBC,QADuB;AAAA,MACbC,QADa,GACAF,UADA,CACbE,QADa;AAE/BC,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYJ,UAAZ;AAQA,SAAO,UAACK,QAAD,EAAc;AACnB,WAAOZ,KAAK,CAACa,IAAN,CAAW,iCAAX,EAA8CC,IAAI,CAACC,SAAL,CAAeR,UAAf,CAA9C,EACNS,IADM,CACD,UAAUC,QAAV,EAAoB;AACxBP,MAAAA,OAAO,CAACC,GAAR,CAAYM,QAAZ;AAIH,KANQ,EAORC,KAPQ,CAOF,UAAUC,KAAV,EAAiB;AACpB,YAAMA,KAAN;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;AACH,KAVQ,CAAP;AAqCD,GAtCD;AAuCD;AAAA","sourcesContent":["import * as t from './actionTypes';\n\nimport{service} from '../service';\n\nimport { Alert } from 'react-native'; // to show alerts in app\n\nimport axios from \"axios\";\n\n// this is what our action should look like which dispatches the \"payload\" to reducer\nconst setLoginState = (loginData) => {\n    return {\n      type: t.SET_LOGIN_STATE,\n      payload: loginData,\n    };\n  };\n// export function login(input){\n//   console.log(input);\n// }\nexport function login(loginInput){\n  const { username, password } = loginInput;\n  console.log('xd');\n  console.log(loginInput);\n  // return axios.post('http://localhost:3000/auth/login',loginInput)\n  //   .then((res) => {\n  //     console.log(res.data)\n  // }).catch((error) => {\n  //     console.log(error)\n  // });\n\n  return (dispatch) => {  // don't forget to use dispatch here!\n    return axios.post('http://10.0.0.2:3000/auth/login', JSON.stringify(loginInput))\n    .then(function (response) {\n      console.log(response);\n\n      // and create action obj here\n      // dispatch(someAction(...))\n  })\n  .catch(function (error) {\n      throw error;\n      console.log(error);\n  });\n    // return await service\n    // .post('/auth/login',{\n    //   username:loginInput.username,\n    //   password:loginInput.password\n    // }).then(res => {\n    //   // if the credential are correct\n    //   if (res.data.success) {\n    //     // assign the variables to state by the function 'login' in mutation\n    //     // context.commit(\"login\", {\n    //     //   token: res.data.data.token,\n    //     //   user: res.data.data.userInfo[0],\n    //     //   exp: Math.floor(Date.now() / 1000) + 60 * 360\n    //     // });\n    //     // // return the user information to have a signal\n    //     // return res.data.data.user;\n    //   } else {\n    //     // // activate the function 'logout' in mutation\n    //     // context.commit(\"logout\");\n    //     // // throw error\n    //     // throw \"Wrong username or password\";\n    //   }\n    // }).catch(err=>{\n    //   throw err;\n    // })\n    \n    \n  };\n};"]},"metadata":{},"sourceType":"module"}