{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import React from'react';import Image from\"react-native-web/dist/exports/Image\";import{AppLoading}from'expo';import*as Font from'expo-font';import{Asset}from'expo-asset';import{Block,GalioProvider}from'galio-framework';import{NavigationContainer}from'@react-navigation/native';import{Provider}from'react-redux';import{store}from\"./plugin/redux/store\";import Screens from\"./navigation/Screens\";import{Images,articles,nowTheme}from\"./constants\";var assetImages=[Images.Onboarding,Images.Logo,Images.Pro,Images.NowLogo,Images.iOSLogo,Images.androidLogo,Images.ProfilePicture,Images.CreativeTimLogo,Images.InvisionLogo,Images.RegisterBackground,Images.ProfileBackground];articles.map(function(article){return assetImages.push(article.image);});function cacheImages(images){return images.map(function(image){if(typeof image==='string'){return Image.prefetch(image);}else{return Asset.fromModule(image).downloadAsync();}});}var App=function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={isLoadingComplete:false,fontLoaded:false};_this._loadResourcesAsync=function _callee(){return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _regeneratorRuntime.awrap(Font.loadAsync({'montserrat-regular':require(\"./assets/font/Montserrat-Regular.ttf\"),'montserrat-bold':require(\"./assets/font/Montserrat-Bold.ttf\")}));case 2:_this.setState({fontLoaded:true});return _context.abrupt(\"return\",Promise.all(_toConsumableArray(cacheImages(assetImages))));case 4:case\"end\":return _context.stop();}}},null,null,null,Promise);};_this._handleLoadingError=function(error){console.warn(error);};_this._handleFinishLoading=function(){if(_this.state.fontLoaded){_this.setState({isLoadingComplete:true});}};return _this;}_createClass(App,[{key:\"render\",value:function render(){if(!this.state.isLoadingComplete){return React.createElement(AppLoading,{startAsync:this._loadResourcesAsync,onError:this._handleLoadingError,onFinish:this._handleFinishLoading});}else{var storeWarp=store;return React.createElement(Provider,{store:storeWarp},React.createElement(NavigationContainer,null,React.createElement(GalioProvider,{theme:nowTheme},React.createElement(Block,{flex:true},React.createElement(Screens,null)))));}}}]);return App;}(React.Component);export{App as default};","map":{"version":3,"sources":["/Users/yhlau/Arthur/project/wysfyp/frontend副本/App.js"],"names":["React","AppLoading","Font","Asset","Block","GalioProvider","NavigationContainer","Provider","store","Screens","Images","articles","nowTheme","assetImages","Onboarding","Logo","Pro","NowLogo","iOSLogo","androidLogo","ProfilePicture","CreativeTimLogo","InvisionLogo","RegisterBackground","ProfileBackground","map","article","push","image","cacheImages","images","Image","prefetch","fromModule","downloadAsync","App","state","isLoadingComplete","fontLoaded","_loadResourcesAsync","loadAsync","require","setState","Promise","all","_handleLoadingError","error","console","warn","_handleFinishLoading","storeWarp","Component"],"mappings":"qoCAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,uDAEA,OAASC,UAAT,KAA2B,MAA3B,CACA,MAAO,GAAKC,CAAAA,IAAZ,KAAsB,WAAtB,CACA,OAASC,KAAT,KAAsB,YAAtB,CACA,OAASC,KAAT,CAAgBC,aAAhB,KAAqC,iBAArC,CACA,OAASC,mBAAT,KAAoC,0BAApC,CACA,OAAQC,QAAR,KAAuB,aAAvB,CACA,OAAQC,KAAR,4BACA,MAAOC,CAAAA,OAAP,4BACA,OAASC,MAAT,CAAiBC,QAAjB,CAA2BC,QAA3B,mBAGA,GAAMC,CAAAA,WAAW,CAAG,CAClBH,MAAM,CAACI,UADW,CAElBJ,MAAM,CAACK,IAFW,CAGlBL,MAAM,CAACM,GAHW,CAIlBN,MAAM,CAACO,OAJW,CAKlBP,MAAM,CAACQ,OALW,CAMlBR,MAAM,CAACS,WANW,CAOlBT,MAAM,CAACU,cAPW,CAQlBV,MAAM,CAACW,eARW,CASlBX,MAAM,CAACY,YATW,CAUlBZ,MAAM,CAACa,kBAVW,CAWlBb,MAAM,CAACc,iBAXW,CAApB,CAeAb,QAAQ,CAACc,GAAT,CAAa,SAAAC,OAAO,QAAIb,CAAAA,WAAW,CAACc,IAAZ,CAAiBD,OAAO,CAACE,KAAzB,CAAJ,EAApB,EAEA,QAASC,CAAAA,WAAT,CAAqBC,MAArB,CAA6B,CAC3B,MAAOA,CAAAA,MAAM,CAACL,GAAP,CAAW,SAAAG,KAAK,CAAI,CACzB,GAAI,MAAOA,CAAAA,KAAP,GAAiB,QAArB,CAA+B,CAC7B,MAAOG,CAAAA,KAAK,CAACC,QAAN,CAAeJ,KAAf,CAAP,CACD,CAFD,IAEO,CACL,MAAOzB,CAAAA,KAAK,CAAC8B,UAAN,CAAiBL,KAAjB,EAAwBM,aAAxB,EAAP,CACD,CACF,CANM,CAAP,CAOD,C,GAEoBC,CAAAA,G,8SACnBC,K,CAAQ,CACNC,iBAAiB,CAAE,KADb,CAENC,UAAU,CAAE,KAFN,C,OAyCRC,mB,CAAsB,qLACdrC,IAAI,CAACsC,SAAL,CAAe,CACnB,qBAAsBC,OAAO,wCADV,CAEnB,kBAAmBA,OAAO,qCAFP,CAAf,CADc,SAMpB,MAAKC,QAAL,CAAc,CAAEJ,UAAU,CAAE,IAAd,CAAd,EANoB,gCAObK,OAAO,CAACC,GAAR,oBAAgBf,WAAW,CAAChB,WAAD,CAA3B,EAPa,uE,OAUtBgC,mB,CAAsB,SAAAC,KAAK,CAAI,CAG7BC,OAAO,CAACC,IAAR,CAAaF,KAAb,EACD,C,OAEDG,oB,CAAuB,UAAM,CAC3B,GAAI,MAAKb,KAAL,CAAWE,UAAf,CAA2B,CACzB,MAAKI,QAAL,CAAc,CAAEL,iBAAiB,CAAE,IAArB,CAAd,EACD,CACF,C,sEA/CQ,CACP,GAAI,CAAC,KAAKD,KAAL,CAAWC,iBAAhB,CAAmC,CACjC,MACE,qBAAC,UAAD,EACE,UAAU,CAAE,KAAKE,mBADnB,CAEE,OAAO,CAAE,KAAKM,mBAFhB,CAGE,QAAQ,CAAE,KAAKI,oBAHjB,EADF,CAOD,CARD,IAQO,CACL,GAAMC,CAAAA,SAAS,CAAG1C,KAAlB,CACA,MAGA,qBAAC,QAAD,EAAU,KAAK,CAAE0C,SAAjB,EACE,oBAAC,mBAAD,MACE,oBAAC,aAAD,EAAe,KAAK,CAAEtC,QAAtB,EACE,oBAAC,KAAD,EAAO,IAAI,KAAX,EACE,oBAAC,OAAD,MADF,CADF,CADF,CADF,CAHA,CAaD,CACF,C,iBAxC8BZ,KAAK,CAACmD,S,SAAlBhB,G","sourcesContent":["import React from 'react';\nimport { Image } from 'react-native';\nimport { AppLoading } from 'expo';\nimport * as Font from 'expo-font';\nimport { Asset } from 'expo-asset';\nimport { Block, GalioProvider } from 'galio-framework';\nimport { NavigationContainer } from '@react-navigation/native';\nimport {Provider} from 'react-redux';\nimport {store} from './plugin/redux/store';\nimport Screens from './navigation/Screens';\nimport { Images, articles, nowTheme } from './constants';\n\n// cache app images\nconst assetImages = [\n  Images.Onboarding,\n  Images.Logo,\n  Images.Pro,\n  Images.NowLogo,\n  Images.iOSLogo,\n  Images.androidLogo,\n  Images.ProfilePicture,\n  Images.CreativeTimLogo,\n  Images.InvisionLogo,\n  Images.RegisterBackground,\n  Images.ProfileBackground\n];\n\n// cache product images\narticles.map(article => assetImages.push(article.image));\n\nfunction cacheImages(images) {\n  return images.map(image => {\n    if (typeof image === 'string') {\n      return Image.prefetch(image);\n    } else {\n      return Asset.fromModule(image).downloadAsync();\n    }\n  });\n}\n\nexport default class App extends React.Component {\n  state = {\n    isLoadingComplete: false,\n    fontLoaded: false\n  };\n\n  // async componentDidMount() {\n  //   Font.loadAsync({\n  //     'montserrat-regular': require('./assets/font/Montserrat-Regular.ttf'),\n  //     'montserrat-bold': require('./assets/font/Montserrat-Bold.ttf')\n  //   });\n\n  //   this.setState({ fontLoaded: true });\n  // }\n\n  render() {\n    if (!this.state.isLoadingComplete) {\n      return (\n        <AppLoading\n          startAsync={this._loadResourcesAsync}\n          onError={this._handleLoadingError}\n          onFinish={this._handleFinishLoading}\n        />\n      );\n    } else {\n      const storeWarp = store;\n      return (\n        \n  \n      <Provider store={storeWarp}> \n        <NavigationContainer>\n          <GalioProvider theme={nowTheme}>\n            <Block flex>\n              <Screens />\n            </Block>\n          </GalioProvider>\n        </NavigationContainer>\n      </Provider>\n      );\n    }\n  }\n\n  _loadResourcesAsync = async () => {\n    await Font.loadAsync({\n      'montserrat-regular': require('./assets/font/Montserrat-Regular.ttf'),\n      'montserrat-bold': require('./assets/font/Montserrat-Bold.ttf')\n    });\n\n    this.setState({ fontLoaded: true });\n    return Promise.all([...cacheImages(assetImages)]);\n  };\n\n  _handleLoadingError = error => {\n    // In this case, you might want to report the error to your error\n    // reporting service, for example Sentry\n    console.warn(error);\n  };\n\n  _handleFinishLoading = () => {\n    if (this.state.fontLoaded) {\n      this.setState({ isLoadingComplete: true });\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}